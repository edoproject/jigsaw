plugins {
    id 'groovy' // https://docs.gradle.org/current/userguide/groovy_plugin.html
    id 'idea' // https://docs.gradle.org/4.1/userguide/idea_plugin.html
    id 'maven'
    id 'org.jenkins-ci.jpi' version '0.22.0' // https://wiki.jenkins.io/display/JENKINS/Gradle+JPI+Plugin
    id "de.undercouch.download" version "3.2.0"
}

// This solves a lot of issues related to classpath and resources location, that I faced in 3.5 and 4.1 version of gradle
task wrapper(type: Wrapper) {
    gradleVersion = '2.13' //version required
}

idea {
    module {
        inheritOutputDirs = false
    }
}

group = 'org.jenkins-ci.plugins'
version = '0.0.1-SNAPSHOT'    // Or whatever your version is.
description = 'Jenkins Init Groovy-bases Setup Administrating Wizard'

jenkinsPlugin {
    coreVersion = '1.609.1'  // Because https://issues.jenkins-ci.org/browse/JENKINS-42398
    //coreVersion = '2.7.1'
    displayName = 'Jenkins Init Groovy-bases Setup Administrating Wizard (JIGSAW)'
    url = 'https://github.com/gszadkow/jigsaw'         // URL for plugin on Jenkins wiki or elsewhere.
    gitHubUrl = 'https://github.com/gszadkow/jigsaw'   // Plugin URL on GitHub. Optional.
    shortName = 'JIGSAW'

    // use the plugin class loader before the core class loader
    pluginFirstClassLoader = false

    // The developers section is optional, and corresponds to the POM developers section.
    developers {
        developer {
            id 'gszadkow'
            name 'Grzegorz Szadkowski'
            email 'grzegorz.szadkowski@gmail.com'
        }
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.jenkins-ci.org/public/' }
}

configurations {
    testPlugins {}
}

dependencies {
    compile fileTree(dir: 'src/main/groovy')
    compile 'com.cloudbees:groovy-cps:1.7@jar'
    jenkinsPlugins 'org.jenkins-ci.plugins:junit:1.21@jar'

    // Jenkins plugins dependencies
    jenkinsPlugins 'com.sonymobile.tools.gerrit:gerrit-events:2.11.1@jar'
    jenkinsPlugins 'org.fluentd:fluent-logger:0.3.2@jar'
    jenkinsPlugins 'org.jenkins-ci.plugins:groovy-events-listener-plugin:1.014@jar'

    jenkinsPlugins "org.jenkins-ci.plugins.workflow:workflow-api:1.13@jar"
    jenkinsPlugins "org.jenkins-ci.plugins.workflow:workflow-basic-steps:1.13@jar"
    jenkinsPlugins "org.jenkins-ci.plugins.workflow:workflow-cps:1.13@jar"
    jenkinsPlugins "org.jenkins-ci.plugins.workflow:workflow-durable-task-step:1.13@jar"
    jenkinsPlugins "org.jenkins-ci.plugins.workflow:workflow-job:1.13@jar"
    jenkinsPlugins "org.jenkins-ci.plugins.workflow:workflow-scm-step:1.13@jar"
    jenkinsPlugins "org.jenkins-ci.plugins.workflow:workflow-step-api:1.13@jar"
    jenkinsPlugins "org.jenkins-ci.plugins.workflow:workflow-support:1.13@jar"
    jenkinsPlugins 'org.jenkins-ci.main:jenkins-test-harness-tools:2.2@jar'
    jenkinsPlugins 'org.jenkins-ci.plugins:matrix-project:1.7@jar'
    jenkinsPlugins 'org.jenkins-ci.plugins:junit:1.13@jar'

    // Test dependancies
    jenkinsTest 'com.cyrusinnovation:mockito-groovy-support:1.3'

    // Test dependencies
    jenkinsTest "org.jenkins-ci.plugins:ant:1.3@jar"
    jenkinsTest "org.mockito:mockito-all:1.10.19@jar"
    jenkinsTest 'org.jenkins-ci.plugins:script-security:1.19@jar'
    jenkinsTest 'org.jenkins-ci.main:maven-plugin:2.12.1@jar'
    jenkinsTest 'org.jenkins-ci.plugins:javadoc:1.3@jar'
    jenkinsTest 'org.jenkins-ci.plugins:mailer:1.17@jar'

    // Test dependencies for pipeline plugin
    jenkinsTest "org.jenkins-ci.plugins:durable-task:1.10@jar"

    // Caused by: java.lang.ClassNotFoundException: com.mongodb.MongoException
    jenkinsTest 'org.mongodb:mongo-java-driver:3.4.2@jar'
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    dependsOn 'cleanTest'
    dependsOn 'downloadMultipleFiles'
}

// TODO: Prepare directory 'resources/test/plugins
task downloadMultipleFiles(type: de.undercouch.gradle.tasks.download.Download) {
    src(['http://updates.jenkins-ci.org/latest/groovy-events-listener-plugin.hpi'])
    dest new File(buildDir, 'resources/test/plugins/.')
}

defaultTasks 'test'